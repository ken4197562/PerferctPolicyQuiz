namespace PerfectPolicyQuizFE2022.Controllers
{
    public class QuizController: Controller 
    {
        private readonly IApiRequest<Quiz> _apiRequest;

        private readonly string quizController = "Quiz";
        

        public QuizController(IApiRequest<Quiz> apiRequest)
        {
            _apiRequest = apiRequest;
        }

        [HttpPost]
        public IActionResult Filter(IFormCollection collection)
        {
            var result = collection["quizDDL"].ToString();
            return RedirectToAction("Index", new { filter = result });
        }

        // GET: QuizController
        public ActionResult Index(string filter = "")
        {
            var quizList = _apiRequest.GetAll(quizController);

            var quizDDL = quizList.Select(c => new SelectListItem
            {
                Value = c.Title,
                Text = c.Title
            });

            ViewBag.QuizDDL = quizDDL;

            if (!String.IsNullOrEmpty(filter))
            {
                var quizfilteredList = quizList.Where(c => c.Title == filter);
                return View(quizfilteredList);

            }

            return View(quizList);
        }

        // GET: QuizController/Details/5
        public ActionResult Details(int id)
        {
            Quiz quizDetails = _apiRequest.GetSingle(quizController, id);

            return View(quizDetails);
        }

        // GET: QuizController/Create
        public ActionResult Create()
        {

            QuizCreate quiz = new QuizCreate();
            quiz.AuthorName = HttpContext.Session.GetString("inputName");

            return View(quiz);
        }

        // POST: QuizController/Create
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(QuizCreate quiz)
        {
            try
            {

                Quiz createdQuiz = new Quiz()
                {
                    Title=quiz.Title,
                    Topic =quiz.Topic,
                    AuthorName=quiz.AuthorName,
                    DateCreated=quiz.DateCreated,
                    PassPercentage=quiz.PassPercentage
 
                };

                _apiRequest.Create(quizController, createdQuiz);
                return RedirectToAction("Index");

                
            }
            catch
            {
                return View();
            }
        }

      

        // GET: QuizController/Edit/5
        public ActionResult Edit(int id)
        {
            if (!AuthenticationHelper.isAuthenticated(this.HttpContext))
            {
                return RedirectToAction("Login", "Auth");
            }

            Quiz quiz = _apiRequest.GetSingle(quizController, id);

            return View(quiz);
        }

        // POST: QuizController/Edit/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(int id, Quiz quiz)
        {
            try
            {
                if (!AuthenticationHelper.isAuthenticated(this.HttpContext))
                {
                    return RedirectToAction("Login", "Auth");
                }

                _apiRequest.Edit(quizController, quiz, id);

                return RedirectToAction(nameof(Index));
            }
            catch
            {
                return View();
            }
        }

        // GET: QuizController/Delete/5
        public ActionResult Delete(int id)
        {
            if (!AuthenticationHelper.isAuthenticated(this.HttpContext))
            {
                return RedirectToAction("Login", "Auth");
            }

            Quiz quiz = _apiRequest.GetSingle(quizController, id);

            return View(quiz);
        }

        // POST: QuizController/Delete/5
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Delete(int id, IFormCollection collection)
        {
            try
            {

                if (!AuthenticationHelper.isAuthenticated(this.HttpContext))
                {
                    return RedirectToAction("Login", "Auth");
                }

                _apiRequest.Delete(quizController, id);

                return RedirectToAction(nameof(Index));
            }
            catch(Exception e)
            {
                return View();
            }
        }

        [HttpPost]
        public IActionResult FilterQuiz(IFormCollection collection)
        {
            // Retrieve filter text
            string filterText = collection["AuthorName"];
            string inputName = collection["AuthorName"].ToString();
           HttpContext.Session.SetString("inputName", inputName);
            //var quizList = _apiRequest.GetAll(quizController).Where(c => c.Title.Contains(filterText)).ToList();

            // retrieve a list of all quizzes
            var quizList = _apiRequest.GetAll(quizController);

            // filter that list, return the results to a new list
            var filteredList = quizList.Where(c => c.AuthorName.ToLower().Contains(filterText.ToLower())).ToList();

            // return this list to the index page
            return View("Index", filteredList);


            //return View("Index", _apiRequest.GetAll(quizController).Where(c => c.Title.Contains(collection["emailProvider"])).ToList());
        }

    }
